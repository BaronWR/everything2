<node>
  <doctext>[%

my $UID = getId($USER) || 0;

if (!$UID || ($UID == $HTMLVARS{guest_user})) {
	return xml_error('Not logged in.');
}



# load common code
htmlcode('new msg system common');

# functions
my $xml_error = $HTMLVARS{newmsg_common}{xml_error};
my $xml_escape = $HTMLVARS{newmsg_common}{xml_escape};
my $get_user_permission = $HTMLVARS{newmsg_common}{get_user_permission};
my $post_to_channel = $HTMLVARS{newmsg_common}{post_to_channel};

# variables
my $systemUID = $HTMLVARS{newmsg_common}{systemUID};



# read a channel
if ($query-&gt;param('viewchannel')) {
	
	my $chanid = int $query-&gt;param('viewchannel');
	my $onlybeforetime = int $query-&gt;param('onlybeforetime');
	
	my $channame = $DB-&gt;sqlSelect(
		'name', 'newmsg_channels', &quot;channel_id=$chanid&quot;);
	
	# make sure user has at least read permission
	my $isPublic = (substr($channame, 0, 1) eq '#');
	my $userLevel = &amp;$get_user_permission($UID, $chanid);
	
	if (!$isPublic &amp;&amp; $userLevel &lt; 1) {
		return &amp;$xml_error('Permission denied.');
	}
	
	my $xml = &quot;&lt;channel id=\&quot;$chanid\&quot; name=\&quot;$channame\&quot;&gt;&quot;;
	
	# get the posts to the channel
	
	my $extrawhere = '';
	if ($onlybeforetime) {
		$extrawhere = &quot;AND timestamp &lt;= $onlybeforetime&quot;;
	}
	
	my $cursor = $DB-&gt;sqlSelectMany('timestamp, user_id, text',
		'newmsg_messages', &quot;channel_id=$chanid $extrawhere&quot;,
		&quot;ORDER BY timestamp DESC LIMIT 30&quot;);
	
	# list the posts
	
	my $msglist = '';
	
	while (my $row = $cursor-&gt;fetchrow_hashref) {
		
		my $msg = '&lt;msg';
		
		# mark system/informational posts
		if ($$row{user_id} == $systemUID) { $msg .= ' system=&quot;1&quot;'; }
		
		# the rest of the msg
		$msg .= ' time=&quot;' . $$row{timestamp} . '&quot;';  # time
		$msg .= ' userid=&quot;' . $$row{user_id} . '&quot;';  # user
		my $usernode = getNodeById($$row{user_id}, 'user');
		$msg .= ' username=&quot;' . $$usernode{title} . '&quot;';  # user
		$msg .= '&gt;' . &amp;$xml_escape($$row{text}) . '&lt;/msg&gt;';  # text
		
		# add the messages backwards, since they come back from db DESC
		$msglist = $msg . $msglist;
	}
	
	# add the msglist to the xml so far, with paging info if relevant
	if ($onlybeforetime) {
		$xml .= &quot;&lt;messages onlybeforetime=\&quot;$onlybeforetime\&quot;&gt;&quot;;
	} else { $xml .= '&lt;messages&gt;'; }
	$xml .= $msglist . '&lt;/messages&gt;';
	
	# list current channel permissions
	
	$xml .= '&lt;permissions&gt;';
	
	my $cursor = $DB-&gt;sqlSelectMany(
		'user_id, level', 'newmsg_permissions', &quot;channel_id=$chanid&quot;);
	
	while (my $row = $cursor-&gt;fetchrow_hashref) {
		if ($$row{level} &gt; 0) {
			my $usernode = getNodeById($$row{user_id}, 'user');
			$xml .= &quot;&lt;user id=\&quot;$$row{user_id}\&quot; name=\&quot;$$usernode{title}\&quot; level=\&quot;$$row{level}\&quot; /&gt;&quot;;
		}
	}
	
	$xml .= '&lt;/permissions&gt;';
	
	$xml .= '&lt;/channel&gt;';
	return $xml;
}


# otherwise, list all visible channels

my $xml = '&lt;channels&gt;';
my $cursor = $DB-&gt;sqlSelectMany('channel_id, level',
	'newmsg_permissions', &quot;user_id=$UID AND level &gt; 0&quot;);

while (my $row = $cursor-&gt;fetchrow_hashref) {
	my $channame = $DB-&gt;sqlSelect(
		'name', 'newmsg_channels', &quot;channel_id=$$row{channel_id}&quot;);
	
	$xml .= &quot;&lt;channel id=\&quot;$$row{channel_id}\&quot;&quot;
		. &quot; name=\&quot;$channame\&quot;&quot;
		. &quot; permission=\&quot;$$row{level}\&quot; /&gt;&quot;;
}

$xml .= '&lt;/channels&gt;';
return $xml;

%]</doctext>
  <core>0</core>
  <reputation>0</reputation>
  <lockedby_user>0</lockedby_user>
  <createtime>2009-06-04 18:13:19</createtime>
  <locktime>0000-00-00 00:00:00</locktime>
  <totalvotes>0</totalvotes>
  <hits>0</hits>
  <node_id>1988172</node_id>
  <edittime>0000-00-00 00:00:00</edittime>
  <type_nodetype>1252389</type_nodetype>
  <document_id>1988172</document_id>
  <author_user>1797883</author_user>
  <package>0</package>
  <title>new msg system read</title>
</node>
