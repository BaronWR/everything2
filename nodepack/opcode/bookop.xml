<node>
  <core>0</core>
  <reputation>0</reputation>
  <lockedby_user>0</lockedby_user>
  <createtime>2001-01-13 19:53:44</createtime>
  <locktime>0000-00-00 00:00:00</locktime>
  <totalvotes>0</totalvotes>
  <hits>0</hits>
  <node_id>1547883</node_id>
  <htmlcode_id>1547883</htmlcode_id>
  <checks_arguments>0</checks_arguments>
  <code>
if($query-&gt;param(&quot;bgroupadd&quot;))
{

  my $group = getNode($query-&gt;param(&quot;node_id&quot;));
  my $group_id = $query-&gt;param(&quot;node_id&quot;);
 

  return unless($$group{author_user} == $$USER{user_id});
  return unless($group &amp;&amp; $$group{type}{grouptable});

  foreach my $param ($query-&gt;param)
  {
    next unless($param =~ /^bnode_(\d+)$/);

    # For some reason, passing $1 here causes the function to receive undef.
    # Probably has something to do with default vars.  So, we need to assign
    # what we found to a scoped var.
    
    my $insert = $1;
    insertIntoNodegroup($group, $USER, $insert);
  }
}
elsif($query-&gt;param('bflush'))
{
  my $bucket = $$VARS{bookbucket};
  $bucket = &quot;&quot;;
  $$VARS{bookbucket} = $bucket;
  delete $$VARS{bookbucket};
}


if($query-&gt;param(&quot;bdrop&quot;) or $query-&gt;param(&quot;dropexec&quot;))
{
  my $bucket = $$VARS{bookbucket};
  foreach my $param ($query-&gt;param)
  {
    next unless($param =~ /^bnode_(\d+)$/);

    # Remove the numeric id from the bucket list
    $bucket =~ s/$1,?//;
    $bucket =~ s/,$//;
  }

  $$VARS{bookbucket} = $bucket;
  delete $$VARS{bookbucket} unless($bucket &amp;&amp; $bucket ne &quot;&quot;);
}</code>
  <type_nodetype>415056</type_nodetype>
  <author_user>220</author_user>
  <package>0</package>
  <title>bookop</title>
</node>
