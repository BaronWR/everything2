<node>
  <doctext>var E2AJAX = {

	ajaxNode : 1873513,
	ajaxUrl : &quot;/index.pl&quot;,

	varChange: function(name, value, callback) { // NB: name and value have to pass check in htmlcode ajaxVar
		data = {node_id:  E2AJAX.ajaxNode,
			mode: &quot;var&quot;,
			value: value ,
			name: name
		 };
		myAjax = new Ajax.Request(E2AJAX.ajaxUrl,{method: 'get', parameters: data, onComplete: callback});
	},

	privateMessage: function(recipient, msgText) {
		E2AJAX.sendMessage(&quot;/msg &quot;+recipient+&quot; &quot;+msgText);
	},

getLastMessage: function() {

},

	sendMessage: function(msgText,checkmsg,callback) {
		if ((msgText.length ==0)&amp;&amp;(checkmsg == '')) {
			E2AJAX.update(&quot;chatterbox_chatter&quot;, &quot;showchatter&quot;, &quot;&quot;, 0);
			$('talk_button').update('&lt;input type=&quot;button&quot; value=&quot;talk&quot; onclick=&quot;updateTalk()&quot;/&gt;'); 
		}
		else {
			data = {
				node_id: E2AJAX.ajaxNode,
				mode: &quot;message&quot;,
				deletelist: checkmsg,
				msgtext: msgText.replace( /[^ -~]/gm , function(x) { return &quot;&amp;#&quot; + x.charCodeAt(0) + &quot;;&quot; ; } )
			};
			myAjax = new Ajax.Request(E2AJAX.ajaxUrl,{method: 'get', parameters: data, requestHeaders: [&quot;If-Modified-Since&quot;, &quot;Thu, 1 Jan 1970 00:00:00 GMT&quot;], onComplete: callback});
		}


	},

	update: function(id, htmlcode, args, replaceID, callback) {
 args = Object.toJSON(args);

		if (replaceID == null) {replaceID = 1;}
		data = {node_id:  E2AJAX.ajaxNode,
			mode: &quot;update&quot;,
			htmlcode: htmlcode,
			 args: args
			};

		myAjax = new Ajax.Request(E2AJAX.ajaxUrl,{method: 'get', parameters: data, requestHeaders: [&quot;If-Modified-Since&quot;, &quot;Thu, 1 Jan 1970 00:00:00 GMT&quot;], onComplete: function(response) {
		if (callback != null) {
			callback();
		}
		if (replaceID) {
			$(id).replace(response.responseText);
 		}
		else {
			$(id).update(response.responseText);
		}

		 }
		});
	},

	voteNode: function(node_vote, weight) {
		data = {node_id:  E2AJAX.ajaxNode,
			mode: &quot;vote&quot;
	
			};
		data[&quot;vote__&quot; + node_vote] = weight;
		$(&quot;voteinfo_&quot;+node_vote).select(&quot;.vote_buttons&quot;).first().update(&quot;Voting ...&quot;);
		myAjax = new Ajax.Request(E2AJAX.ajaxUrl,
			{
				method: 'get', 
				parameters: data, 
				onSuccess: function() {  E2AJAX.update(&quot;voteinfo_&quot;+node_vote, &quot;voteit&quot;, node_vote+&quot;,2&quot;, 0);} } );
	},

	bookmarkNode: function(node_bookmark) {
		data = {
			op : &quot;bookmark&quot;,
			node_id : node_bookmark
		};
		myAjax = new Ajax.Request(E2AJAX.ajaxUrl, {method: 'get', parameters: data});
	},

	coolNode: function (node_cool) {
		data = {
			op : &quot;cool&quot;,
			cool_id : node_cool
		};
		myAjax = new Ajax.Request(E2AJAX.ajaxUrl, {method: 'get', parameters: data});
	},

	updateNodelet: function(nodeletName, params, callback) {
		nodeletID = nodeletName.toLowerCase().replace(/\W/g,'');
		if (params == null) {params = {};}
		E2AJAX.update(nodeletID,'updateNodelet',{ args: nodeletName, query: params }, 1, callback);
	},

	createTitle: function(title) {
		data = {type : &quot;e2node&quot;, 
			op : &quot;new&quot;,
			node : title};
		myAjax = new Ajax.Request(E2AJAX.ajaxUrl, {parameters: data, onSuccess: function() {E2AJAX.titleCreated = 1;}});
	},

	createWriteup: function(parent_e2node, doctext, writeuptype) {
		data = {op: &quot;new&quot;,
			type: &quot;writeup&quot;,
			writeup_doctext: doctext,
			writeup_parent_e2node: parent_e2node,
			writeuptype: writeuptype
		};
		new Ajax.Request(E2AJAX.ajaxUrl, {parameters: data, method: &quot;post&quot;});
	},

	postWriteup: function(title, doctext, writeuptype) {
		E2AJAX.createTitle(title);
		Deferrer.defer(function() {E2AJAX.getNodeInfo(title,&quot;e2node&quot;,&quot;node_id&quot;);}, &quot;E2AJAX.titleCreated&quot;);
		Deferrer.defer(function() {E2AJAX.createWriteup(E2AJAX.parentNode, doctext, writeuptype);}, &quot;E2AJAX.parentNode&quot;);
	},

	getNodeInfo: function(nodeTitle, nodeType, field) {
		data = {node_id:  E2AJAX.ajaxNode,
			mode: &quot;getNodeInfo&quot;,
			type: nodeType,
			field: field,
			title: nodeTitle
		};
		myAjax = new Ajax.Request(E2AJAX.ajaxUrl,{method: &quot;get&quot;, parameters: data, onComplete: function(response) { E2AJAX.parentNode = response.responseText;} });
},

	markNotificationSeen: function(notified_id) {
		//$(&quot;notified_&quot;+notified_id).fade();
		Effect.BlindUp(&quot;notified_&quot;+notified_id);
		data = {
			node_id:  E2AJAX.ajaxNode,
			notified_id: notified_id,
			mode: &quot;markNotificationSeen&quot;
		};
		myAjax = new Ajax.Request(E2AJAX.ajaxUrl,{method: &quot;get&quot;, parameters: data});
},

	checkNotifications: function() {
		E2AJAX.checkList(&quot;checkNotifications&quot;, E2AJAX.notificationOn, E2AJAX.notificationOff, &quot;.notified&quot;, &quot;notified_&quot;);
	},

	checkCools: function(){
		E2AJAX.checkList(&quot;checkCools&quot;, E2AJAX.coolOn, E2AJAX.coolOff, &quot;.cooled&quot;, &quot;cooled_&quot;);
	},

	checkMessages: function(){

		E2AJAX.checkList(&quot;checkMessages&quot;, E2AJAX.messageOn, E2AJAX.messageOff, &quot;.messaged&quot;, &quot;messaged_&quot;);
	},

	checkFeedItems: function(){

		E2AJAX.checkList(&quot;checkFeedItems&quot;, E2AJAX.feedItemOn, E2AJAX.feedItemOff, &quot;.feeditem&quot;, &quot;feeditem_&quot;);
	},

	itemOff: function(id) {
		Effect.BlindUp($(id));
},

	itemOn: function(id, IDGroup, holder, content, position) {
		if (position == &quot;top&quot;) {
			$(holder).insert({ top: content});
		}
		else {
			$(holder).insert({ bottom: content});
		}
		Effect.BlindDown($(IDGroup+id));
		new Effect.Highlight.defer($(IDGroup+id));
	},

	messageOff: function(messaged_id) {
		E2AJAX.itemOff(messaged_id);
	},

	messageOn: function(id, content, position) {

		content = &quot;&lt;div class='messaged' id='messaged_&quot;+id+&quot;'&gt;&quot;+content+&quot;&lt;/div&gt;&quot;;
		E2AJAX.itemOn(id,'messaged_','chatterbox_chatter',content,'bottom');
	},

	feedItemOff: function(id) {
		E2AJAX.itemOff(id);
	},

	feedItemOn: function(id, content, position) {
		content = &quot;&lt;div class='feeditem' id='feeditem_&quot;+id+&quot;' style='padding: .5em; margin-bottom: .2em'&gt;&quot;+content+&quot;&lt;/div&gt;&quot;;
		E2AJAX.itemOn(id,'feeditem_','feed_list',content,'top');
	},

	notificationOff: function(notified_id) {
		E2AJAX.itemOff(notified_id);
	},

	notificationOn: function(notified_id, content, position) {
		content = 

		 &quot;&lt;li class='notified' id='notified_&quot;+notified_id+&quot;'&gt;&lt;a class='closebox' title='hide notification' href='javascript:E2AJAX.markNotificationSeen(&quot;+notified_id+&quot;)'&gt;&amp;#91;x]&lt;/a&gt; &quot;+content+&quot;&lt;/li&gt;&quot;;
		E2AJAX.itemOn(notified_id,'notified_','notifications_list',content,'top');
	},

	checkList: function(mode, callbackOn, callbackOff, currentListClass, currentListIDGroup) {
		data = {node_id:  E2AJAX.ajaxNode,
			mode: mode
		};
		myAjax = new Ajax.Request(E2AJAX.ajaxUrl,
		{
			method: &quot;get&quot;,
			parameters: data,
			onComplete: function(response) {
				responseJSON = response.responseText.evalJSON();
				i = 1;
				while (responseJSON[i]) {

					if ($(currentListIDGroup+responseJSON[i].id) === null) {
						callbackOn.defer(responseJSON[i].id, responseJSON[i].value, &quot;top&quot;);
					}
					i++;
				}
				$$(currentListClass).each(function(item) {
					if (typeof(responseJSON[item.id.replace(currentListIDGroup,'')]) === 'undefined') {
						callbackOff.defer(item.id);
					}
				});
			}
		});

	},

	addFeedItem: function(doctext) {
		data = {
			type : &quot;feeditem&quot;,
			node_id : E2AJAX.ajaxNode,
			title: &quot;feeditem&quot;,
			op : &quot;new&quot;,
			doctext : doctext
		};
		myAjax = new Ajax.Request(E2AJAX.ajaxUrl, {
			parameters: data, 
			onSuccess: 
				function() {
					E2AJAX.checkFeedItems(); $('new_feed_item').value = '';
				}
		});
	},

	deleteFeedItem: function(item_id) {
		data = {
			mode : &quot;deleteFeedItem&quot;,
			node_id : E2AJAX.ajaxNode,
			feeditem_nodeid : item_id
		};
		myAjax = new Ajax.Request(E2AJAX.ajaxUrl, {
			parameters: data, 
			onSuccess: 
				function() {
					E2AJAX.checkFeedItems();
				}
		});
		
	}

	

};
</doctext>
  <createtime>2007-04-11 00:08:07</createtime>
  <node_id>1988891</node_id>
  <edittime>0000-00-00 00:00:00</edittime>
  <type_nodetype>1786405</type_nodetype>
  <document_id>1988891</document_id>
  <title>E3 Everything2 AJAX</title>
</node>
