<node>
  <doctext>&lt;h3&gt;Primary Purpose&lt;/h3&gt;

&lt;p&gt;The purpose of the Notifications nodelet is to provide an alternative to the messaging / alert system, whereby user can be &quot;notified&quot; (a la Facebook) of E2 updates that may interest them.&lt;/p&gt;

&lt;h3&gt;Primary Nodes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;[notification] nodetype (for each notification type)&lt;/li&gt;
&lt;li&gt;[notification] dbtable (to store notification code)&lt;/li&gt;
&lt;li&gt;[notified] dbtable (to store notification_ids and args)&lt;/li&gt;
&lt;li&gt;[addNotification] htmlcode (to insert notifications into notified)&lt;/li&gt;
&lt;li&gt;[Notifications] nodelet (to view notifications)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Existing Notifications (bold at end indicates completed implementaton)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;[cooled]&lt;/b&gt; - notify a user when their writeup has been cooled. &lt;b&gt;Complete&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[weblog]&lt;/b&gt; - notify a user when something is weblogged to a usergroup. &lt;b&gt;Complete&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[favorite]&lt;/b&gt; - notify a user when one of their &quot;favorite noders&quot; posts a writeup. &lt;b&gt;Complete&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[experience]&lt;/b&gt; - notify a user when they gain/lose experience.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[frontpage]&lt;/b&gt; - notify a user of new frontpage item. &lt;b&gt;Complete&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[e2poll]&lt;/b&gt; - notify a user of new e2poll.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[newpatch]&lt;/b&gt; - notify when a new patch is posted. &lt;b&gt;Complete&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[bookmark]&lt;/b&gt; - notify when a writeup has been bookmarked. &lt;b&gt;Complete&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[newcomment]&lt;/b&gt; - notify when a CE debate is updated.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;User Interface Model&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;User selects desired notification types and adds Notification nodelets.&lt;/li&gt;
&lt;li&gt;When an event occurs that would trigger a notification:
&lt;ol&gt;
&lt;li&gt;The notification is inserted into the notified dbtable via [addNotification]&lt;/li&gt;
&lt;li&gt;This takes the form of: notification_id (notification's node_id), user_id (defaults to $USER-&gt;user_id), and args.
&lt;ul&gt;
&lt;li&gt;Args are passed as a JSON string into the notified table. They are then parsed when the notification code is evaluated to provide whatever information is required (writeup_id, author name, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Issues&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;No mechanism for adding notification types to settings.&lt;/li&gt;
&lt;li&gt;Lack of actual notification nodetypes.&lt;/li&gt;
&lt;/ul&gt;
</doctext>
  <core>0</core>
  <reputation>0</reputation>
  <lockedby_user>0</lockedby_user>
  <createtime>2008-02-20 20:05:26</createtime>
  <locktime>0000-00-00 00:00:00</locktime>
  <totalvotes>0</totalvotes>
  <hits>3</hits>
  <node_id>1930841</node_id>
  <edittime>0000-00-00 00:00:00</edittime>
  <type_nodetype>854232</type_nodetype>
  <document_id>1930841</document_id>
  <author_user>1312198</author_user>
  <package>0</package>
  <title>edev: Notifications</title>
</node>
