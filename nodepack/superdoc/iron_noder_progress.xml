<node>
  <doctext>[%
require DateTime;

#constants
my $UID = getId($USER)||$HTMLVARS{'guest_user'}||0;
my $isGuest = ($UID==$HTMLVARS{'guest_user'} or !$UID);
my $isRoot = !$isGuest &amp;&amp; exists $HTMLVARS{group_gods}{$UID};
my $isCE = !$isGuest &amp;&amp; ($isRoot || exists $HTMLVARS{'group_content editors'}{$UID});
my $ironLeader;
my $isIronLeader = 0;
my $isIronNoder = 0;
my $currentYear = DateTime-&gt;now-&gt;year;

#if there are more iron noder things later, this section should be updated to select appropriate group
#	ironnoders	2008 November
my $groupTitle = 'ironnoders';
my @groupTypes = ('usergroup');

my $dateMinInc = '' . $currentYear . '-11-01';
my $dateMaxExc = '' . $currentYear . '-12-01';

my $ug = undef;
foreach(@groupTypes) {
	$ug = getNode($groupTitle, $_);
	last if defined $ug;
}

if(!defined $ug) {
	return 'Sorry; unable to find a list of iron noders.';
}
#return 'found group '.linkNode($ug);


#contains iron noder information
#	key is user node_id
#	value is light node ref
my %ironNoders;

my $str = &quot;&lt;h3&gt;IRON NODER PROGRESS for $currentYear&lt;/h3&gt;&quot;;
$str .= '&lt;ul&gt;
';

my $u;
my $ironID;
foreach $ironID (@{$$ug{group}}) {
	$u = getNodeById($ironID, 'light');

	if(!$u) {
		$str .= '(DEBUG: unable to get user ID '.$ironID.')';
		next;
	}

        $ironLeader = $ironID if !defined $ironLeader;

	$ironNoders{$ironID} = $u;

#	$str .= '&lt;li&gt;'.linkNode($u).'&lt;/li&gt;
#';

}

# We don't use these presently, but it might be useful in the future
#  if we want to show special things to the organizers/members
$isIronNoder = (defined $ironNoders{$UID});
$isIronLeader = ($ironLeader == $UID);

#writeup information setup
my $showWUs = 1;
my $dbh = undef;
my $qh = undef;
my $typeID = getId(getType('writeup')) || undef;
if($showWUs &amp;&amp; !$typeID) {
	$showWUs = 0;
	$str .= '(DEBUG: unable to get writeup type)';
}
if($showWUs) {
	$dbh = $DB-&gt;getDatabaseHandle();
	if(!$dbh) {
		undef $dbh;
		$showWUs=0;
		$str .= '(DEBUG: unable to connect to database for writeups)';
	}
}
if($showWUs &amp;&amp; (defined $dbh)) {

	my $getWriteupQuery = &lt;&lt;QUERY;
SELECT
	node.node_id, node.title, parent.title 'parenttitle', writeup.publishtime
	, vote.vote_id, writeup.wrtype_writeuptype, writeup.writeup_id
	FROM node
	LEFT OUTER JOIN vote
		ON
			voter_user = $UID
			AND vote_id = node.node_id
	JOIN writeup
		ON
			node.node_id = writeup.writeup_id
	LEFT OUTER JOIN node AS parent
		ON
			writeup.parent_e2node = parent.node_id
	WHERE
		node.type_nodetype = '$typeID'
		AND node.author_user =  ?
		AND writeup.publishtime  &gt;= ?
		AND writeup.publishtime  &lt;  ?
	ORDER BY
		writeup.publishtime ASC
QUERY

	$qh = $dbh-&gt;prepare($getWriteupQuery);

	if(!$qh) {
		undef $qh;
		undef $dbh;
		$showWUs = 0;
		$str .= '(DEBUG: unable to construct query for writeups)';
	}
}


#all iron noders
#	key is what to sort by
#	value is light node ref
my %ironNodersBySortKey;
my $sortKey;
foreach(keys(%ironNoders)) {
	#sort by username (case insensitive), and break tie by appending something arbitrary but consistent
	$sortKey = lc($ironNoders{$_}-&gt;{title}) . $ironNoders{$_}-&gt;{node_id};
	#while(exists $ironNodersBySortKey{$sortKey}) { $sortKey .= '.'; }
	$ironNodersBySortKey{ $sortKey } = $ironNoders{$_};
}

my @displayOrder = sort(keys(%ironNodersBySortKey));
#TODO? maybe reverse half the time to not favor items? maybe randomly split list in half (so everyone has equal chance of being somewhere in list)

my $BIGNUMBER = 99999;
my $WUCOUNTFORIRON = 30;
my $statTotalWU = 0;
my $statTotalNoders = 0;
my $statNonzeroNoders = 0;
my $statIronNoders = 0;
my $statUserWU;
my $statMaxCount = -1;
my $statMinCount = $BIGNUMBER;
my $statMinCountPositive = $BIGNUMBER;
my $statVotedWU = 0;
my $statYourWU = 0;

my $htmlListUser;

foreach $sortKey (@displayOrder) {
	$u = $ironNodersBySortKey{$sortKey};
	$ironID = getId($u);
	unless($ironID) {
		$str .= '(DEBUG: unable to get ID for '.htmlEncode($sortKey).')';
		next;
	}

	$htmlListUser = '';

	$htmlListUser .= '&lt;li&gt;';
	if($showWUs) { $htmlListUser .= '&lt;big&gt;'; };
	$htmlListUser .= linkNode($u);
	if($showWUs) { $htmlListUser .= '&lt;/big&gt;'; };

	if($showWUs) {
		$statUserWU = 0;

		$qh-&gt;execute(getId($u),$dateMinInc,$dateMaxExc);
		my @userWUs = ();
		while(my $r=$qh-&gt;fetchrow_hashref) {
			push(@userWUs, $r);
		}
		$qh-&gt;finish();
		$statUserWU = scalar(@userWUs);
		$htmlListUser .= ' (' . $statUserWU . ')';

		$htmlListUser .= &quot;&lt;ol&gt;\n&quot;;
		my $instructions = '&lt;li class=&quot;&amp;votecheck&quot;&gt;title';
		my %functionMap = (
			votecheck =&gt; sub {
				my $N = shift;
				my $str = '';
				if ($$N{vote_id}) {
					$str .= ' hasvoted';
					$statVotedWU++;
				}
				return $str;
			},
			title =&gt; sub {
				my $N = shift;
				return linkNode($N, $$N{parenttitle}, { -class =&gt; 'title' } );
			}
		);

		$htmlListUser .= htmlcode('show content', \@userWUs, $instructions, %functionMap)
			. '&lt;/ol&gt;'
			;

		#update stats
		$statTotalNoders++;
		$statTotalWU += $statUserWU;
		if ($UID == $ironID) { $statYourWU = $statUserWU; }
		if ($statUserWU &gt; 0) { $statNonzeroNoders++; }
		if ($statUserWU &gt;= $WUCOUNTFORIRON) { $statIronNoders++; }
		if($statUserWU &lt; $statMinCount) { $statMinCount = $statUserWU; }
		if(($statUserWU &lt; $statMinCountPositive) &amp;&amp; ($statUserWU&gt;0) ) { $statMinCountPositive = $statUserWU; }
		if($statUserWU &gt; $statMaxCount) { $statMaxCount = $statUserWU; }

	}

	$htmlListUser .= &quot;&lt;/li&gt;\n&quot;;
	$str .= $htmlListUser;

}

$str .= '&lt;/ul&gt;';


#statistics
if($showWUs) {
	$str .= '&lt;p&gt;&lt;strong&gt;some statistics&lt;/strong&gt;:&lt;br /&gt;
';
	if ($statYourWU &gt; 0) {
		$str .= 'your writeups: '.$statYourWU.'&lt;br /&gt;
';
	}
	if ($statTotalWU - $statYourWU &gt; 0) {
		$str .= 'you have voted on '.$statVotedWU.' writeups (' . int(100 * $statVotedWU / ($statTotalWU - $statYourWU)) . '%) &lt;br /&gt;
';
	}
	if($statMinCount!=$BIGNUMBER) {
		$str .= 'minimum writeups: '.$statMinCount.'&lt;br /&gt;
';
	}
	if($statMinCountPositive!=$BIGNUMBER) {
		$str .= 'positive minimum writeups: '.$statMinCountPositive.'&lt;br /&gt;
';
	}
	if($statMaxCount&gt;=0) {
		$str .= 'maximum writeups: '.$statMaxCount.'&lt;br /&gt;
';
	}
	if ($statTotalNoders &gt; 0) {
		$str .= 'average writeups: ' . sprintf('%.2f', $statTotalWU / $statTotalNoders) . '&lt;br /&gt;
';
	}
	$str .= 'total writeups: '.$statTotalWU.'&lt;br /&gt;
';
	$str .= 'total noders: '.$statTotalNoders.'&lt;br /&gt;
';
	$str .= 'noders with at least one writeup: ' . $statNonzeroNoders . '&lt;br /&gt;
';
	$str .= 'IRON NODERS: '.$statIronNoders.'
&lt;/p&gt;';
}


return $str;
%]
</doctext>
  <createtime>2009-11-02 00:58:55</createtime>
  <node_id>1988529</node_id>
  <edittime>0000-00-00 00:00:00</edittime>
  <type_nodetype>14</type_nodetype>
  <title>iron noder progress</title>
</node>
