<node>
  <doctext>[%
my $str;

use XML::Simple;
use LWP::Simple;

my $xml = get(&quot;http://devel.everything2.com/node/ticker/&quot;
              .&quot;production-ready+patches&quot;);

my $patchsetref = XMLin($xml);

my $review_id = $query -&gt; param(&quot;review_id&quot;);

#Review the patch, allow importing and/or applying it.
if($review_id){
  my %patch;

  #First find the patch...
  foreach my $patchref (@{$patchsetref -&gt; {patch}} ) {
    if ($patchref -&gt; {patch_id} == $review_id){
      %patch = %$patchref;
      last;
    }
  }

  return &quot;No importable patch with that id!&quot; unless %patch;

  my $targetnode = getNode($patch{for_node_title},
                           $patch{for_node_nodetype});

  my $author = getNode($patch{author},&quot;user&quot;);

  $str .= &quot;&lt;p&gt;&quot;.linkNode($author).&quot; has submitted a patch for &quot;
          .linkNode($targetnode)
          .&quot;'s &lt;tt&gt;$patch{field}&lt;/tt&gt; field.&lt;/p&gt;\n&quot;;

  $str .= &quot;Its stated purpose is \&quot;$patch{purpose}\&quot;.&quot;;

  if($patch{instructions}){
    $str .= &quot;&lt;p&gt;Additional instructions read: \&quot;$patch{instructions}\&quot;.&lt;/p&gt;\n&quot;;
  }
  

  $str .= &quot;&lt;p&gt;And now, the short diff:&lt;/p&gt;\n&quot;;
  $str .= &quot;&lt;pre&gt;&quot;.showPartialDiff($targetnode -&gt; {$patch{field}}, $patch{code}).&quot;&lt;/pre&gt;&quot;;
  #$str .= &quot;&lt;p&gt;Long diff now follows:&lt;/p&gt;\n&quot;;
  #$str .= &quot;&lt;pre&gt;&quot;.showCompleteDiff($patch{code}, $patch{code}).&quot;&lt;/pre&gt;&quot;;
  #$str .= &quot;&lt;p&gt;Debugging:&lt;/p&gt;\n&quot;;
  #$str .= &quot;&lt;pre&gt;&quot;.encodeHTML($targetnode -&gt; {$patch{field}} ).&quot;&lt;/pre&gt;&quot;;
}
else{ #Else, show all possible patches to import

  if (@{$patchsetref -&gt; {patch}} ) {
    $str .= &quot;&lt;p&gt;The following patches from the dev server claim to be &quot;
            .&quot;ready for production:&lt;/p&gt;\n&quot;;
  }
  else {
    return &quot;&lt;p&gt;No pending patches in dev server!&lt;/p&gt;\n&quot;;
  }

  $str .= &quot;&lt;table&gt;\n&quot;;
  $str .= &quot;\t&lt;tr&gt; &lt;th&gt;Patchee&lt;/th&gt; &lt;th&gt;Patcher&lt;/th&gt;&quot;
          .&quot;&lt;th&gt;Purpose&lt;/th&gt; &lt;th&gt; Additional Instructions &lt;/th&gt; &quot;
          .&quot;&lt;th&gt;Applies cleanly&lt;/th&gt;&lt;th&gt;&lt;/th&gt;&lt;/tr&gt;&quot;;

  use Digest::MD5 qw(md5_hex);

  my $oddrow = 1; #For styling oddrows

  foreach my $patchref (@{$patchsetref -&gt; {patch}} ) {
    my %patch = %$patchref;

    my $targetnode = getNode($patch{for_node_title},
                             $patch{for_node_nodetype});

    my $author = getNode($patch{author},&quot;user&quot;);

    my $localhash = &quot;+&quot;; #Whatever, something that can't be the output
    #of md5_hex.

    #Default in case target node link doesn't exist here.
    my $targetnodelink = $patch{for_node_title};

    #Might be a patch for a node that doesn't exist here!
    if ($targetnode) {
      my $targetcode = $targetnode -&gt; {$patch{field} };
      $localhash = md5_hex($targetcode);
      $targetnodelink = linkNode($targetnode);
    }

    if ($oddrow) {
      $str .= &quot;\t&lt;tr class=\&quot;oddrow\&quot;&gt;\n&quot;;
    }
    else {
      $str .= &quot;\t&lt;tr class=\&quot;evenrow\&quot;&gt;\n&quot;;
    }
    $oddrow = !$oddrow;

    $str .= &quot;\t\t&lt;td&gt;&quot;.$targetnodelink.&quot;&lt;/td&gt;\n&quot;;
    $str .= &quot;\t\t&lt;td&gt;&quot;.linkNode($author).&quot;&lt;/td&gt;\n&quot;;
    $str .= &quot;\t\t&lt;td&gt;&quot;.($patch{purpose} || &quot;&lt;em&gt;none&lt;/em&gt;&quot;).&quot;&lt;/td&gt;\n&quot;;
    $str .= &quot;\t\t&lt;td&gt;&quot;.($patch{instructions} || &quot;&lt;em&gt;none&lt;/em&gt;&quot;).&quot;&lt;/td&gt;\n&quot;;

    $str .= &quot;\t\t&lt;td&gt;&quot;.($localhash eq $patch{target_hash} ?
                        &quot;yep&quot; :
                        &quot;NO!&quot;)
            .&quot;&lt;/td&gt;\n&quot;;

    $str .= &quot;\t\t&lt;td&gt;&quot;
            .linkNode($NODE,&quot;review patch&quot;,
                {review_id =&gt; $patch{patch_id}})
            .&quot;&lt;/td&gt;\n&quot;;
  }
  $str .= &quot;&lt;/table&gt;&quot;;
}

return $str;

%]
</doctext>
  <createtime>2009-03-05 01:19:47</createtime>
  <totalvotes>0</totalvotes>
  <node_id>1976809</node_id>
  <edittime>0000-00-00 00:00:00</edittime>
  <type_nodetype>14</type_nodetype>
  <title>Swap's Other Playground</title>
</node>
