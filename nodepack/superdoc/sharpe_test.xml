<node>
  <doctext>[%

my $dbh = $DB-&gt;getDatabaseHandle();
return 'No database handle!' unless $dbh;

my $ds = $dbh-&gt;prepare(&quot;select user_id, nick from user where lasttime &gt;= 1309019446.513941&quot;);
$ds-&gt;execute() or return $ds-&gt;errstr;

my $str = '';

use List::Util qw(sum);

while (my $row = $ds-&gt;fetchrow_hashref) {
    #my $node = getNodeById($$row{user_id});
    
    my $sq = $dbh-&gt;prepare(&quot;select reputation from node where author_user=$$row{user_id}&quot;);
    $sq-&gt;execute() or return $sq-&gt;errstr;
    
    my @lst = ();
    while (my $srow = $sq-&gt;fetchrow_hashref) {
        push @lst, $$srow{reputation};
    }
    
	#sz = len(lst)
	#mean = sum(lst) / float(sz)
	#return mean / math.sqrt(sum((x - mean) ** 2 for x in lst) / sz)
	
	if (@lst &gt; 10) {
	    my $sz = @lst;
	    my $mean = sum(@lst) / $sz;
	    my $stddev = sqrt(sum(map { ($_ - $mean) * ($_ - $mean) } @lst) / $sz);
	    my $ratio;
	    if ($stddev) {
            $ratio = $mean / $stddev;
	    } else {
	        $ratio = 0;
	    }
	    
        $str .= $$row{nick} . '&lt;br&gt;lst = ' . @lst . '&lt;br&gt;sz = ' . $sz . '&lt;br&gt;mean = ' . $mean . '&lt;br&gt;ratio = ' . $ratio . '&lt;p&gt;';
    }
}

$str;

%]
</doctext>
  <node_id>1992310</node_id>
  <type_nodetype>14</type_nodetype>
  <title>sharpe test</title>
</node>
