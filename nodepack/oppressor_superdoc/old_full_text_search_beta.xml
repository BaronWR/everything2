<node>
  <doctext>[{openform}]
&lt;input type=&quot;text&quot; name=&quot;ftsearch&quot; &gt;&lt;input type=&quot;submit&quot; value=&quot;Full text search&quot;&gt;&lt;/form&gt;
[%

my $str = '';
my $startat ||= 0;
$startat = $query-&gt;param(&quot;startat&quot;);
my $searchwords = $query-&gt;param(&quot;ftsearch&quot;);
return 'Enter some words to search for' unless $searchwords;
my $goodhash;
my @final;
my $commonwords = getVars(getNode('common words','setting'));
$$goodhash{clean} = 1;

my $originalsearch = $searchwords;

  $searchwords =~ s/\\//g;
  $searchwords =~ s/&lt;.*&gt;//g;
  $searchwords =~ s/&amp;.*;//g;
  $searchwords =~ tr/\[\]\?\.\,\;\:\@\=//;
  #$searchwords =~ s/[^0-z]//g;



my $goodwords;
my $badwords;
my $wordorder = 0;

 my @search = split(&quot; &quot;,$searchwords);

foreach(@search)
{
   #$str.=&quot;$_&lt;br&gt;&quot;;

   my $thisword = $_;

   $wordorder++;

   if($$commonwords{$thisword})
   {
      $$badwords{$thisword} = $wordorder;
      next;
   }

   if(length($thisword) &lt; 3)
   {
      $$badwords{$thisword} = $wordorder;
      next;
   }

   $$goodwords{$thisword} = $wordorder;

   my $wordid = $DB-&gt;sqlSelect(&quot;ftdict_id&quot;, &quot;ftdict&quot;, &quot;ftdict_word='$thisword'&quot;);

   return &quot;No writeups matched your query.&quot; unless($wordid);

   my $incominghash;

   my $searchcache = $DB-&gt;sqlSelect(&quot;ftcache_cache&quot;, &quot;ftcache&quot;, &quot;ftcache_dictid='$wordid'&quot;);

   if($searchcache){

        $incominghash = eval(&quot;my &quot;.$searchcache);

   }
   else
   {
      my $csr = $DB-&gt;sqlSelectMany(&quot;ftsearch_writeup,
        ftsearch_weight&quot;, &quot;ftsearch&quot;, &quot;ftsearch_dictid=$wordid&quot;);

      while(my $row = $csr-&gt;fetchrow_hashref())
      {
        $$incominghash{$$row{ftsearch_writeup}} = $$row{ftsearch_weight};
        #my $n = getNodeById($$row{ftsearch_writeup});
      }
        use Data::Dumper;
        $DB-&gt;sqlInsert(&quot;ftcache&quot;, {ftcache_dictid=&gt;$wordid, ftcache_cache=&gt; Data::Dumper-&gt;Dump([\%$incominghash])});

   }


   if(exists($$goodhash{clean}))
   {

       delete $$goodhash{clean};
       $goodhash = $incominghash;
   }
   else
   {
       my $smallerhash;
       my $largerhash;

       if(keys %$incominghash &gt; keys %$goodhash){

         $smallerhash = $goodhash;
         $largerhash = $incominghash;
       }else
       {
         $smallerhash = $incominghash;
         $largerhash = $goodhash;
       }

       foreach(keys %$smallerhash)
       {
          my $xferkey = $_;

          if($$largerhash{$xferkey})
          {
            $$smallerhash{$xferkey} += $$largerhash{$xferkey};
          }
          else
          {
             delete $$smallerhash{$xferkey};
          }
       }

       $goodhash = $smallerhash;
       return 'Your search didn\'t bring back any results. Try narrowing the search' if (keys %$goodhash == 0);

   }
}

if(exists($$goodhash{clean}))
{
  delete $$goodhash{clean};

}
else
{
@final = sort {$$goodhash{$b} &lt;=&gt; $$goodhash{$a}} keys(%$goodhash);
#my @final = values($goodhash);

my $countdown = $startat;

  while($countdown &gt;= 0)
  {
    my $discard = shift(@final);
    $countdown = 0 unless($discard);
    $countdown--;
  }

for(my $count=0; $count &lt; 10; $count++)
{

  my $tmp = shift(@final);

  if($tmp){
    my $n = getNodeById($tmp);
    
    unless($n)
    {
         $count--;
         next;
    }

    my $tmptxt = $$n{doctext};

    if (length($$n{doctext}) &gt; 512){

      $tmptxt =~ s/&lt;.*&gt;/\n/g;

      $tmptxt = substr($tmptxt, 0, 512).&quot;&lt;/a&gt;... (&quot;.linkNode($n, 'more').&quot;)&quot;;
      #SUCH a hack. &lt;/a&gt; is baaaad, but oh well -jb

    }else
    {
       $tmptxt = encodeHTML($$n{doctext});
    }
    
    $str .= linkNode($n, $$n{title}).&quot; - &quot;.linkNode($$n{parent_e2node}, &quot;(full)&quot;).&quot; Weight: &quot;.$$goodhash{$tmp}.&quot;&lt;br&gt;&lt;small&gt;&quot;.$tmptxt.&quot;&lt;/small&gt;&lt;br&gt;&lt;br&gt;&lt;hr width=\&quot;100\&quot;&gt;&lt;br&gt;&quot;;

  }else{
    $count = 50;
  }
}
}

my $moretxt = '';

if($startat &gt;= 10)
{
  $moretxt .= &quot;Old results: &quot;;
  $moretxt .= linkNode($NODE, ($startat-10).&quot;-&quot;.($startat), {startat =&gt; $startat-10, ftsearch=&gt;$searchwords});
}

if(shift(@final))
{
   $moretxt .=&quot;More results: &quot;;

   $moretxt .= linkNode($NODE, ($startat+10).&quot;-&quot;.($startat+20).&quot;&lt;br&gt;&lt;br&gt;&quot;, {startat =&gt; $startat+10, ftsearch=&gt;$searchwords});

}
else
{
  $moretxt .=&quot;(No more results)&quot;;
}



my $resstr = &quot;You searched for: &quot;.linkNodeTitle($searchwords);

if(getNode($searchwords, 'e2node'))
{
   $resstr .= &quot; (this exists as an e2node)&quot;;
}

$resstr .= &quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;small&gt;This was modified from your original search of &quot;.linkNodeTitle($originalsearch).&quot; to more close match the indexing&lt;/small&gt;&quot; if(!($originalsearch eq $searchwords));

$resstr .= &quot;&lt;br&gt;&quot;;


my @res = sort{$$goodwords{$a} &lt;=&gt; $$goodwords{$b}} keys(%$goodwords);

foreach(@res)
{
   my $tmp = shift(@res);
   #$resstr.= linkNodeTitle($tmp).&quot; &quot;;
}

@res = sort{$$badwords{$a} &lt;=&gt; $$badwords{$b}} keys(%$badwords);

my $badstr = '';
foreach(@res)
{
   my $tmp = shift(@res);
   $badstr .= linkNodeTitle($tmp).&quot; &quot;;
}

unless($badstr eq '')
{
   $resstr = &quot;(Your query included words that are very common, and are thus excluded. These words are: &quot;.$badstr.&quot;)&quot;;

}

$resstr .= &quot;&lt;br&gt;&lt;br&gt;&quot;;

return $resstr.'Your search didn\'t bring back any results. &lt;br&gt;&lt;br&gt;' if($str eq '');
return $resstr.'We found the following:&lt;br&gt;&lt;br&gt;'.$str.$moretxt;

%]</doctext>
  <node_id>1378561</node_id>
  <edittime>0000-00-00 00:00:00</edittime>
  <type_nodetype>1144104</type_nodetype>
  <title>old full text search beta</title>
</node>
