<node>
  <nltext></nltext>
  <parent_container>175986</parent_container>
  <icon>http://images.everything2.com/img/chatterbox.gif</icon>
  <nlgoto>0</nlgoto>
  <lastupdate>1252694976</lastupdate>
  <node_id>1988889</node_id>
  <iconHeight>22</iconHeight>
  <type_nodetype>9</type_nodetype>
  <iconWidth>170</iconWidth>
  <nodelet_id>1988889</nodelet_id>
  <nlcode>&lt;script type=&quot;text/Javascript&quot;&gt;
&lt;!--
function replyToCB(s, ono) {
	//  unprovided args default to null, which is false
	var cmd = ( ono ) ? '/msg? ' : '/msg ';
	document.formcbox.message.value = cmd + s + &quot; &quot;;
	document.formcbox.message.focus();
	// Workaround to make IE move the cursor to the end of the text box
	if (document.formcbox.message.createTextRange) {
		var r = document.formcbox.message.createTextRange();
		r.moveStart('character', document.formcbox.message.value.length);
		r.select();
	}
}

var noTalkCount=0;
function updateTalk() {
   noTalkCount++;
   var theMessage = $F('message');
   $('message').value = '';
   var checkmsg = $('formcbox').getInputs('checkbox').findAll(function(s) { return s.checked;}).pluck('name').join(',');
   var sendmsg = function() {
alert('test');
      if ($('talk_button')) {
         $('talk_button').update('sending ...');
      }
      E2AJAX.sendMessage(theMessage,checkmsg,function(response) {  
         if ($('chatterbox_nodelet')) {
            E2AJAX.update('chatterbox_nodelet','updateNodelet', 'Chatterbox__'+response.responseText.gsub(&quot;,&quot;,&quot;&amp;#44;&quot;).gsub(&quot;'&quot;,'&amp;#39;'),0);
         }
         else {
            if ($('chatterbox')) {
               E2AJAX.updateNodelet('chatterbox','Chatterbox');
            }
         }
      })
   };
   sendmsg();
   if(theMessage.length&gt;0){
      noTalkCount=0;
   }
}
//--&gt;
&lt;/script&gt;

[% 
if (htmlcode('hasJS','Everything2 AJAX')) {
return '&lt;form method=&quot;post&quot; action=&quot;/index.pl&quot; enctype=&quot;multipart/form-data&quot; onsubmit=&quot;return false;&quot; name=&quot;formcbox&quot; id=&quot;formcbox&quot;&gt;';
}
else {
return htmlcode('openform2','formcbox');
} %]

[%
return if $$VARS{hideprivmessages};
my $str = htmlcode('showmessages','10');
$str .= &quot;\n\n&quot;.'&lt;hr width=&quot;40%&quot; /&gt;' if $str;
$str;
%]

&lt;div id='chatterbox_chatter'&gt;
[{showchatter}] [%
#nate 4-1-02
return; %]
&lt;/div&gt;

&lt;a name='chatbox'&gt;&lt;/a&gt;
[%
return if getId($USER) == $HTMLVARS{guest_user};
my $str;
$str = '&lt;input type=&quot;hidden&quot; name=&quot;op&quot; value=&quot;message&quot; /&gt;&lt;br /&gt;'.&quot;\n\t\t&quot;;

$query-&gt;param('message','');

#show what was said
#$str .= htmlcode('chatterinfo','sent') . '&lt;/small&gt;';
if(defined $query-&gt;param('sentmessage')) {
	my $told = $query-&gt;param('sentmessage');
	my $i=0;
	while(defined $query-&gt;param('sentmessage'.$i)) {
		$told.=&quot;&lt;br /&gt;\n\t\t&quot;.$query-&gt;param('sentmessage'.$i);
		++$i;
	}
	$told=parseLinks($told,0) unless $$VARS{showRawPrivateMsg};
	$str.=&quot;\n\t\t&quot;.'&lt;p class=&quot;sentmessage&quot;&gt;'.$told.&quot;&lt;/p&gt;\n&quot;;
}


#borged or allow talk
$str .= $$VARS{borged}
    ? '&lt;small&gt;You\'re borged, so you can\'t talk right now.&lt;/small&gt;&lt;br /&gt;' . $query-&gt;submit('message_send', 'erase')
    : &quot;&lt;input type='text' id='message' name='message' size='&quot;.($$NODE{title} eq &quot;ajax chatterlight&quot; ? &quot;70&quot; : &quot;12&quot;).&quot;' maxlength='512' /&gt;&quot; . &quot;\n\t\t&quot; . (htmlcode('hasJS','Everything2 AJAX') ? &quot;&lt;span id='talk_button'&gt;&lt;input type='button'  onclick='updateTalk()' value='talk' /&gt;&lt;/span&gt;&quot; : $query-&gt;submit('message_send', 'talk')). &quot;\n\t\t&quot;;
;

if ($$NODE{'title'} eq &quot;chatterlight&quot;)
	{ $str.=&quot;\n\t\t&lt;script type='text/javascript'&gt;document.getElementById('message').focus()&lt;/script&gt;\n&quot;; }
$str.=$query-&gt;end_form;

if (htmlcode('hasJS','Everything2 AJAX')) {
$str.=&quot;\n\t\t&lt;script type='text/javascript'&gt;
Event.observe('message','keypress',
function(s) {
var key = s.which || s.keyCode;
 if (key == Event.KEY_RETURN) {updateTalk();}
});
&lt;/script&gt;&quot;;
}

#newbie help
#$str .= htmlcode('chatterinfo','help');
use Everything::Experience;
$str .= &quot;\n\t\t&quot;.'&lt;div align=&quot;center&quot;&gt;&lt;small&gt;'.linkNodeTitle('Chatterbox|How does this work?').&quot; | &quot;.linkNodeTitle('Chatterlight').&quot;&lt;/small&gt;&lt;/div&gt;\n&quot; if getLevel($USER)&lt;2;

#Jay's topic stuff

my $topicsetting;
my $topic = '';

if($$VARS{topicCbox}) { #different from unless in Other Users
	$topicsetting = getVars(getNode('Room Topics', 'setting')); #hard coded id for speed

	if(exists($$topicsetting{$$USER{in_room}})) {
		$topic = $$topicsetting{$$USER{in_room}};

		utf8::decode($topic);

		#new pseudo-exec thingy
		#comment out next 2 lines to restore original way (but also get it in [Other Users] (nodelet))
		$HTMLVARS{pseudoExec}=$topic;
		$topic = htmlcode('pseudoExec','');

		$topic = &quot;\n\t\t&quot;.'&lt;small&gt;'.parseLinks($topic).'&lt;/small&gt;'; #slighly different
	}

}

$str.$topic;
%]
[%
return unless (exists $HTMLVARS{'group_gods'}{$$USER{node_id}}) || (exists $HTMLVARS{'group_e2contact'}{$$USER{node_id}}) || (exists $HTMLVARS{'group_chanops'}{$$USER{node_id}});
return &quot;\n\t\t&quot;.'&lt;p align=&quot;right&quot;&gt;&lt;small&gt;'.linkNode($NODE, 'silence', {'op' =&gt; 'flushcbox'}).'&lt;/small&gt;&lt;/p&gt;';
%]
[%
return unless $USER-&gt;{in_room};
return &quot;\n\t\t&quot;.'&lt;p align=&quot;right&quot;&gt;&lt;small&gt;'.linkNodeTitle('go outside').'&lt;/small&gt;&lt;/p&gt;';
%]</nlcode>
  <title>Chatterbox_old</title>
</node>
